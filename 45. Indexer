/* INDEXERS 

Indexers are similar to properties, but are accessed via an index argument rather than a property name.

For example, the 'string' class has an indexer that lets you 
access each of its char values via an int index:  */

string s = "hello";
Console.WriteLine (s[0]);   // 'h'
Console.WriteLIne (s[3]);   // 'l'


// Indexer arguments can be of any types, and has the same modifiers as properties.



/* To write an indexer, define a property called 'this', 
specifying the arguments in square brackets.  */

// Example: 

class Sentence
{
	string[] words = "The quick brown fox".Split();
	
	public string this [int wordNum]      // indexer
	{
		get 
		{
			return words [wordNum];
		}
		
		set
		{
			words [wordNum] = value;
		}
	}
}



// How to use the above indexer: 

Sentence s = new Sentence();
Console.WriteLine (s[3]);    // fox
s[3] = "kangaroo";
Console.WriteLine (s[3]);    // kangaroo




// An indexer can take more than one parameter:


public string this [int arg1, string arg2]
{
	get {...} set {...}
}



// If you omit the 'set' accessor, an indexer becomes read-only.
