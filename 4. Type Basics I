// A constant always represent the same value 
// Example:

const int y = 360;


// All values in C# are instances of a type.


/* Predefined type = string, int, bool
Examples: 
string message = "Hello";

int x = 12 * 30;

bool simpleVar = false;
if (simpleVar)
	Console.WriteLine ("This will not print");

int x = 500;
bool lessThanMile = x < 521;
if (lessThanMile)
	Console.WriteLine ("This will print");  */
	


// A 'type' contains data members and function members.


// Example of a Custom Type: 

using System;

public class UnitConverter
{
  int ratio;         // Field
  public UnitConverter (int unitRatio) {ratio = unitRatio;}  // Constructor
  public int Convert (int unit)  {return unit * ratio;}   // Method
 }
 

class Test
{
  static void Main()
	{
	  UnitConverter feetToInchesConverter = new UnitConverter (12);
	  UnitConverter milesToFeetConverter = new UnitConverter (5280);
	
	  Console.WriteLine (feetToInchesConverter.Convert(30));  // 360
	  Console.WriteLine (feetToInchesConverter.Convert(100));  // 1200
	  Console.WriteLine (feetToInchesConverter.Convert(milesToFeetConverter.Convert(1)));  // 63360
	}
}
