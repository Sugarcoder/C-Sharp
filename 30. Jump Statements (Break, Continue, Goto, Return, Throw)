// Jump Statements - break, continue, goto, return, throw



// BREAK - Ends the execution of the body of an iteration or switch statement. 

// Example: 

int x = 0;
while (true)
{	
	if (x++ > 5)
	break;        // break from the loop
}

// Execution continues here after break




// CONTINUE - Forgoes the remaining statements in a loop and makes an early start of the next iteration. 

// Example: 

for (int i = 0; i < 10; i++)
{
	if ((1 % 2) == 0)      // If i is even...
	continue; 

	Console.WriteLine (i + "");         // Output: 1 3 5 7 9
}




// GOTO - Transfers execution to another label within a statemebt block.

// Example: 

goto statement-label;  

// OR when used within a 'switch' statement...

goto case case-constant;


/* A 'label' is a placeholder in a code block that precedes a statement
The following codes iterates the numbers 1 to 5, mimicking a 'for' loop.  */


int i = 1;
startLoop:
1f (1 <= 5)
{
	Console.Write (1 + " ");
	1++;
	goto startLoop;
}                           // Output: 1 2 3 4 5



/* RETURN - Exits the method and must return an expression
of the method's return type if the method is non-void. 

A 'return' statement can appear anywhere in a method.  */


// Example: 

static decimal AsPercentage (decimal d) 
{
	decimal p = d * 100m;
	return p;                // Return to the calling method with value
}




// THROW - "Throws" an exception to indicate an error has occurred.

// Example: 

1f (w == null)
	throw new ArgumentNullException(...);
